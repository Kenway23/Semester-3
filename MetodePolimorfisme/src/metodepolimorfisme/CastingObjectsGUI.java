/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package metodepolimorfisme;

import java.io.File;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.*;
/**
 *
 * @author Rifki
 */

class AlatMusikCOGUI {
    // Metode umum untuk memainkan alat musik
    void mainkan() {
        System.out.println("Memainkan alat musik umum.");
    }
}

class GitarCOGUI extends AlatMusikCOGUI {
    @Override
    void mainkan() {
        System.out.println("Memainkan suara Gitar.");
    }

     public String getFilePath() {
            return "C:\\gitar.wav";  // Ganti dengan path yang sesuai
        }
}

class PianoCOGUI extends AlatMusikCOGUI {
    @Override
    void mainkan() {
        System.out.println("Memainkan suara Piano.");
    }

     public String getFilePath() {
            return "C:\\piano.wav";  // Ganti dengan path yang sesuai
        }
}

class DrumCOGUI extends AlatMusikCOGUI {
    @Override
    void mainkan() {
        System.out.println("Memainkan suara drum.");
    }

     public String getFilePath() {
            return "C:\\drum.wav";  // Ganti dengan path yang sesuai
        }
}

public class CastingObjectsGUI extends javax.swing.JFrame {

    /**
     * Creates new form CastingObjectsGUI
     */
    public CastingObjectsGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Alat Musik");

        jLabel2.setText("Pilih Alat Musik");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gitar", "Piano", "Drum" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Mainkan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String pilihan = (String) jComboBox1.getSelectedItem();
    AlatMusikCOGUI alatMusik = null;
    String filePath = "";  // Variabel untuk menyimpan path file audio

    // Tentukan objek alat musik berdasarkan pilihan
    if (pilihan != null) {
        switch (pilihan) {
            case "Gitar":
                alatMusik = new GitarCOGUI();
                filePath = ((GitarCOGUI) alatMusik).getFilePath();  // Ambil path file suara Gitar
                break;
            case "Piano":
                alatMusik = new PianoCOGUI();
                filePath = ((PianoCOGUI) alatMusik).getFilePath();  // Ambil path file suara Piano
                break;
            case "Drum":
                alatMusik = new DrumCOGUI();
                filePath = ((DrumCOGUI) alatMusik).getFilePath();  // Ambil path file suara Drum
                break;
            default:
                JOptionPane.showMessageDialog(this, "Alat musik tidak dikenal.");
                return;
        }

        // Mainkan suara dan tampilkan pesan
        alatMusik.mainkan();  // Memanggil metode mainkan() dari objek yang sesuai
        playSound(filePath);  // Memainkan suara berdasarkan file path yang didapat
    }
    }//GEN-LAST:event_jButton2ActionPerformed

private void playSound(String filePath) {
        try {
        File file = new File(filePath);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "File musik tidak ditemukan: " + file.getAbsolutePath());
            return;
        }

        System.out.println("Memutar file: " + file.getAbsolutePath()); // Cek file yang dipilih

        AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
        Clip clip = AudioSystem.getClip();
        clip.open(audioStream);
        clip.start();

        while (!clip.isRunning()) {
            Thread.sleep(10);
        }

        while (clip.isRunning()) {
            Thread.sleep(10);
        }

        clip.close();
    } catch (IOException | UnsupportedAudioFileException | LineUnavailableException | InterruptedException e) {
        JOptionPane.showMessageDialog(this, "Gagal memutar suara: " + e.getMessage());
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CastingObjectsGUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
